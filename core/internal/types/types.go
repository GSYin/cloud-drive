// Code generated by goctl. DO NOT EDIT.
package types

type UserRegisterRequest struct {
	Username string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse struct {
}

type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type UserDetailRequest struct {
	Identity string `json:"identity"`
}

type UserDetailResponse struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest struct {
	Email string `json:"email"`
}

type MailCodeSendResponse struct {
}

type ShareFileDetailRequest struct {
	Identity string `json:"identity"`
}

type ShareFileDetailResponse struct {
	RepositoryIdentity string `json:"repository_identity"`
	Filename           string `json:"filename"`
	Fileext            string `json:"fileext"`
	Filesize           string `json:"filesize"`
	Filepath           string `json:"filepath"`
}

type FileUploadRequest struct {
	Filehash string `json:"filehash,optional"`
	Filename string `json:"filename,optional"`
	Fileext  string `json:"ext,optional"`
	Filesize int64  `json:"size,optional"`
	Filepath string `json:"path,optional"`
}

type FileUploadResponse struct {
	Identity string `json:"identity"`
	Fileext  string `json:"fileext"`
	Filename string `json:"filename"`
}

type UserFileStorageRequest struct {
	ParentId           int64  `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
	Fileext            string `json:"fileext"`
	Filename           string `json:"filename"`
}

type UserFileStorageResponse struct {
}

type UserFileListRequest struct {
	Id   int64 `json:"id,optional"`
	Page int64 `json:"page,optional"`
	Size int64 `json:"size,optional"`
}

type UserFileListResponse struct {
	List  []*UserFile `json:"list"`
	Total int64       `json:"total"`
}

type UserFile struct {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Filename           string `json:"filename"`
	Fileext            string `json:"fileext"`
	Filesize           int64  `json:"filesize"`
	Filepath           string `json:"filepath"`
}

type UserFileNameUpdateRequest struct {
	Identity string `json:"identity"`
	Filename string `json:"filename"`
}

type UserFileNameUpdateResponse struct {
}

type UserFolderCreateRequest struct {
	Filename string `json:"filename"`
	ParentId int64  `json:"parent_id"`
}

type UserFolderCreateResponse struct {
	Identity string `json:"identity"`
}

type UserFileDeleteRequest struct {
	Identity string `json:"identity"`
}

type UserFileDeleteResponse struct {
}

type UserFileMoveRequest struct {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type UserFileMoveResponse struct {
}

type ShareFileCreateRequest struct {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int64  `json:"expired_time"`
}

type ShareFileCreateResponse struct {
	Identity string `json:"identity"`
}

type SharedFilesSaveRequest struct {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"`
}

type SharedFilesSaveResponse struct {
	Identity string `json:"identity"`
}

type RefreshAuthTokenRequest struct {
}

type RefreshAuthTokenResponse struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type FileUploadPrepareRequest struct {
	Md5      string `json:"md5"`
	FileName string `json:"filename,optional"`
	FileExt  string `json:"ext,optional"`
}

type FileUploadPrepareResponse struct {
	Identity string `json:"identity"`
	UploadId string `json:"upload_id"`
	Key      string `json:"key"`
}

type FileUploadChunkRequest struct {
}

type FileUploadChunkResponse struct {
	Etag string `json:"etag"`
}

type FileUploadChunkCompleteRequest struct {
	Md5        string      `json:"md5"`
	Filename   string      `json:"filename"`
	Fileext    string      `json:"fileext"`
	Filesize   int64       `json:"filesize"`
	UploadId   string      `json:"upload_id"`
	Key        string      `json:"key"`
	CosObjects []CosObject `json:"cos_objects"`
}

type CosObject struct {
	Etag        string `json:"etag"`
	ChunkNumber int64  `json:"chunk_number"`
}

type FileUploadChunkCompleteResponse struct {
}
